// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Users {
  id String @id @default(uuid())
  email String @unique
  firstname String
  lastname String
  phoneNumber String?
  username String
  password String
  role Role @default(EMPLOYEE)
}

model Income {
  id String @id @default(uuid())
  date DateTime
  itemSales Int
  itemDiscount Int?
  billDiscount Int?
  focItem Int?
  focBill Int?
  totalSales Int
  totalCollection Int
  ppn Int
  service Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id String  @id @default(uuid())
  evidence String
  price Int
  note String?
  expenseCategoryId Int? @unique
  expenseCategory ExpenseCategory? @relation(fields: [expenseCategoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ExpenseCategory {
  id Int @id @default(autoincrement())
  name String
  expense Expense[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Supplier {
  id String @id @default(uuid())
  evidence String
  quantity Int
  price Int
  discount Int
  ppn Int
  totalAmount Int
  paymentStatus PaymentStatus
  supplierCompany SupplierCompany[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SupplierCompany {
  id Int @id @default(autoincrement())
  name String
  supplierId String?
  supplier Supplier? @relation(references: [id], fields: [supplierId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum PaymentStatus {
  PAID
  UNPAID
}

enum Role {
  EMPLOYEE
  DIRECTOR
}